// basic vars
// -----------------------------------------------
// optional prefix could be useful for namespace
$fxPrefix:                  '';

// Each module, both for classes & attrs separately, has its own prefix variable
// that defaults to the global, which defaults to nothing.  If desired, a prefix
// can be added to all modules or only individual modules.  For example, if using
// this framework next to Bootstrap, the "row" class in the layout module may need
// to be `fx-row` or something to ensure collisions are avoided.
// There is no default as a framework like Bootstrap is not necessary, flex works
// perfectly fine as a layout system on its own and will likely be the default in
// the near future.
$fxLayoutAttrsPrefix:       $fxPrefix;  // data-* is a sensible option for attribs
$fxGrowAttrsPrefix:         $fxPrefix;
$fxOrderAttrsPrefix:        $fxPrefix;
$fxAxisAttrsPrefix:         $fxPrefix;
$fxMediaQueryAttrsPrefix:   $fxPrefix;
$fxResizeAttrsPrefix:       $fxPrefix;
$fxSpacersAttrsPrefix:      $fxPrefix;

$fxLayoutClassesPrefix:     $fxPrefix;  // fx-* suggested to avoid collision with 'row', etc in other frameworks
$fxGrowClassesPrefix:       $fxPrefix;
$fxOrderClassesPrefix:      $fxPrefix;
$fxAxisClassesPrefix:       $fxPrefix;
$fxMediaQueryClassesPrefix: $fxPrefix;
$fxResizeClassesPrefix:     $fxPrefix;
$fxSpacersClassesPrefix:    $fxPrefix;


$fxBaseFont:  14;

$fxNumNil:    0;
$fxNumXS:     2;
$fxNumSM:     4;
$fxNumMD:     6;
$fxNumLG:     10;
$fxNumXL:     15;
$fxNumXXL:    20;
$fxNumXXXL:   30;
$fxNumXXXXL:  40;
$fxNumMax:    300;

// use functions to make units:
// px($num) -> 10px,
// em($num) -> 10em,
// etc.
$fxNumMap: (
  nil:        0,
  xs:         2,
  sm:         4,
  md:         6,
  lg:         10,
  xl:         15,
  xxl:        20,
  xxxl:       30,
  xxxxl:      40,
  max:        300 // arbitrarily large
);


// flex, row, column
// foundational rules map
// -----------------------------------------------
  $fxLayoutRules: (
  (
    name: layout,
    rules: (
      display: flex
    )
  ),
  (
    name: flex,
    rules: (
      flex: 1 1 0%
    )
  ), (
    name: flex,
    mod: content,
    comment: 'Currently no support for flex: content',
    rules: (
      flex: content
    )
  ), (
    name: basis,
    mod: auto,
    rules: (
      flex-basis: auto
    )
  ), (
    name: basis,
    mod: zero,
    rules: (
      flex-basis: 0%
    )
  ), (
    name: column,
    rules: (
      flex-direction: column,
      display: flex
    )
  ), (
    name: column,
    mod: reverse,
    rules: (
      flex-direction: column-reverse
    )
  ), (
    name: column,
    mod: inline,
    rules: (
      flex-direction: column,
      display: inline-flex
    )
  ),(
    name: row,
    rules: (
      flex-direction: row,
      display: flex
    )
  ), (
    name: row,
    mod: reverse,
    rules: (
      flex-direction: row-reverse
    )
  ), (
    name: row,
    mod: inline,
    rules: (
      flex-direction: row,
      display: inline-flex
    )
  ), (
    name: wrap,
    rules: (
      flex-wrap: wrap
    )
  ), (
    name: wrap,
    mod: reverse,
    rules: (
      flex-wrap: wrap-reverse
    )
  ), (
    name: no-wrap,
    rules: (
      flex-wrap: nowrap
    )
  ), (
    name: fit,
    comment: 'Match the parent',
    rules: (
      margin: 0px,
      width: 100%,
      min-height: auto,
      height: inherit
    )
  ), (
    name: height-max,
    rules: (
      height: 100%
    )
  ),
  // next set is miscellaneous
  (
    name: hide,
    rules: (
      display: none !important
    )
  ), (
    name: outline,
    rules: (
      outline: 1px solid #990000
    )
  ), (
    name: outline,
    mod: red,
    rules: (
      outline: 1px solid #990000
    )
  ), (
    name: outline,
    mod: gray,
    rules: (
      outline: 1px solid #999
    )
  ), (
    name: overflow-hidden,
    rules: (
      overflow: hidden
    )
  ), (
    name: scrollable,
    rules: (
      overflow: scroll
    )
  ), (
    name: truncate,
    rules: (
      overflow: hidden,
      text-overflow: ellipsis,
      white-space: nowrap
    )
  ), (
    name: break-word,
    rules: (
      word-break: break-all, // Firefox
      //word-break: break-word // Webkit and Microsoft
    )
  ), (
    name: nowrap,
    rules: (
      white-space: nowrap
    )
  ),
  // positioning
  (
    name: block,
    rules: (
      display: block
    )
  ), (
    name: inline,
    rules: (
      display: inline-block
    )
  ), (
    name: absolute,
    rules: (
      position: absolute
    )
  ), (
    name: relative,
    rules: (
      position: relative
    )
  ), (
    name: top,
    rules: (
      top: 0px
    )
  ), (
    name: bottom,
    rules: (
      bottom: 0px
    )
  ), (
    name: left,
    rules: (
      left: 0px
    )
  ), (
    name: right,
    rules: (
      right: 0px
    )
  ),
  // tmp
  (
    name: shadow-sm,
    rules: (
      box-shadow: 0px 0px 2px 2px #e6e6e6
    )
  )
);

// @debug @type-of((1,2,3,4));
// @debug @type-of((foo: bar));

// grow & shrink
// -----------------------------------------------
$fxGrowPropsList: (grow, shrink);


// order
// -----------------------------------------------
$fxOrderList: (
  (first, 1),
  (second, 2),
  (third, 3),
  (fourth, 4),
  (fifth, 5),
  (sixth, 6),
  (seventh, 7),
  (eighth, 8),
  (ninth, 9),
  (tenth, 10),
  (eleventh, 11),
  (twelfth, 12)
);


// axis maps
// -----------------------------------------------
$fxJustifyContentMap: (
  start: 'flex-start',
  end: 'flex-end',
  center: 'center',
  space-between: 'space-between',
  space-around: 'space-around'
);

$fxAlignItemsMap: (
  start: 'flex-start',
  end: 'flex-end',
  center: 'center',
  stretch: 'stretch',
  baseline: 'baseline'
);

$fxAlignContentMap: (
  start: 'flex-start',
  end: 'flex-end',
  center: 'center',
  stretch: 'stretch',
  space-between: 'space-between',
  space-around: 'space-around'
);


// media queries
// -----------------------------------------------
$fxMediaDevices: (
  mobile: 'max-width: 479px',
  tablet: 'max-width: 767px',
  laptop: 'min-width: 768px) and (max-width: 979px',
  desktop: 'min-width: 1200px'
);

$fxMediaSizes: (
  sm: 'max-width: 479px',
  md: 'max-width: 767px',
  lg: 'min-width: 768px) and (max-width: 979px',
  xl: 'min-width: 1200px'
);

$fxMediaOrientation: column, row;


// spacers fxNumXS
// -----------------------------------------------
$fxSpacerNil:   none 0 !important;
$fxSpacerXS:    xs 3px null;
$fxSpacerSM:    sm 5px null;
$fxSpacerMD:    md 10px null;
$fxSpacerLG:    lg 15px null;
$fxSpacerXL:    xl 20px null;
$fxSpacerXXL:   xxl 30px null;

$fxSpacerSides: (top, right, bottom, left);
$fxSpacerSizes: (
  $fxSpacerNil,
  $fxSpacerXS,
  $fxSpacerSM,
  $fxSpacerMD,
  $fxSpacerLG,
  $fxSpacerXL,
  $fxSpacerXXL
);
